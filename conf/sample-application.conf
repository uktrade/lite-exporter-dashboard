# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "%APPLICATION_SECRET%"

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

## Modules
# https://www.playframework.com/documentation/latest/Modules
# ~~~~~
# Control which modules are loaded when Play starts.  Note that modules are
# the replacement for "GlobalSettings", which are deprecated in 2.5.x.
# Please see https://www.playframework.com/documentation/latest/GlobalSettings
# for more information.
#
# You can also extend Play functionality by using one of the publically available
# Play modules: https://playframework.com/documentation/latest/ModuleDirectory
play.modules {
  enabled += modules.GuiceModule,
  enabled += "org.flywaydb.play.PlayModule"
  # By default, Play will load any class called Module that is defined
  # in the root package (the "app" directory), or you can define them
  # explicitly below.
  # If there are any built-in modules that you want to disable, you can list them here.
  #enabled += my.application.Module

  # If there are any built-in modules that you want to disable, you can list them here.
  #disabled += ""
}

play.filters {
  headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline'; font-src data:"
  hosts.allowed = ["localhost:9000"]
}

pidfile.path = "/dev/null"

play.db {
  config = "db"
  default = "default"
  prototype {
    hikaricp.minimumIdle = 3
    hikaricp.maximumPoolSize = 3
  }
}

jpa.default = defaultPersistenceUnit

db {
  default.driver = org.postgresql.Driver
  default.url = "jdbc:postgresql://localhost:5432/postgres?currentSchema=exporterdashboardapp"
  default.username = "postgres"
  default.password = "password"
  default.jndiName = DefaultDS
  default.migration.auto = true
}

customerService {
  address = "https://lite-customer-service-dev.cloudapps.digital"
  timeout = 10000
}

permissionsService {
  address = "https://lite-permissions-service-dev.cloudapps.digital"
  timeout = 10000
}

ogelService {
  address = "https://lite-ogel-service-dev.cloudapps.digital"
  timeout = 10000
  credentials = "service:password"
}

licenceApplication {
  address = "https://lite-licence-application-reuse-prototype.cloudapps.digital"
}

userService {
  address = "https://lite-user-service-dev.cloudapps.digital"
  timeout = 10000
  cacheExpiryMinutes = 10
}

countryService {
  address = "https://lite-country-service-dev.cloudapps.digital"
  timeout = 10000
  credentials = "service:password"
}

virusService {
  address = "https://av-api.apps.ukti.io/scan"
  timeout = 10000
  credentials = ""
}

upload {
  validation {
    maxSize = 10485760
    allowedExtensions = "bmp, csv, doc, docx, emf, eml, gif, htm, html, jpeg, jpg, mht, msg, pdf, png, ppt, pptx, rar, rtf, tif, tiff, txt, wmv, xls, xlsx, xml, xps, zip"
  }
}

aws {
  credentials {
    profileName = "lite"
    accessKey = ""
    secretKey = ""
  }
  region = "eu-west-2"
  bucketName = ""
  sqsQueueUrl = ""
  sqsWaitTimeSeconds = 1
  snsTopicArn = ""
}

saml {
  issuer = "http://localhost:9000/"
  callbackUrl = "http://localhost:9000/samlResponse"
  location = "https://lite-spire-idp-mock-dev.cloudapps.digital/SingleSignOnService"
  entityId = "http://spire-idp-mock"
  x509Certificate = """MIIDEzCCAfugAwIBAgIJAKoK/heBjcOYMA0GCSqGSIb3DQEBBQUAMCAxHjAcBgNVBAoMFU9yZ2Fu
                       aXphdGlvbiwgQ049T0lEQzAeFw0xNTExMTExMDEyMTVaFw0yNTExMTAxMDEyMTVaMCAxHjAcBgNV
                       BAoMFU9yZ2FuaXphdGlvbiwgQ049T0lEQzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
                       ANBGwJ/qpTQNiSgUglSE2UzEkUow+wS8r67etxoEhlzJZfgK/k5TfG1wICDqapHAxEVgUM10aBHR
                       ctNocA5wmlHtxdidhzRZroqHwpKy2BmsKX5Z2oK25RLpsyusB1KroemgA/CjUnI6rIL1xxFn3KyO
                       Fh1ZBLUQtKNQeMS7HFGgSDAp+sXuTFujz12LFDugX0T0KB5a1+0l8y0PEa0yGa1oi6seONx849ZH
                       xM0PRvUunWkuTM+foZ0jZpFapXe02yWMqhc/2iYMieE/3GvOguJchJt6R+cut8VBb6ubKUIGK7pm
                       oq/TB6DVXpvsHqsDJXechxcicu4pdKVDHSec850CAwEAAaNQME4wHQYDVR0OBBYEFK7RqjoodSYV
                       XGTVEdLf3kJflP/sMB8GA1UdIwQYMBaAFK7RqjoodSYVXGTVEdLf3kJflP/sMAwGA1UdEwQFMAMB
                       Af8wDQYJKoZIhvcNAQEFBQADggEBADNZkxlFXh4F45muCbnQd+WmaXlGvb9tkUyAIxVL8AIu8J18
                       F420vpnGpoUAE+Hy3evBmp2nkrFAgmr055fAjpHeZFgDZBAPCwYd3TNMDeSyMta3Ka+oS7GRFDeP
                       kMEm+kH4/rITNKUF1sOvWBTSowk9TudEDyFqgGntcdu/l/zRxvx33y3LMG5USD0x4X4IKjRrRN1B
                       bcKgi8dq10C3jdqNancTuPoqT3WWzRvVtB/q34B7F74/6JzgEoOCEHufBMp4ZFu54P0yEGtWfTwT
                       zuoZobrChVVBt4w/XZagrRtUCDNwRpHNbpjxYudbqLqpi1MQpV9oht/BpTHVJG2i0ro="""
}

basicAuth {
  user = admin
  password = admin
  realm = ExporterDashboard
}

jwtSharedSecret = "jwtSharedSecret"

errorDetailEnabled: true
